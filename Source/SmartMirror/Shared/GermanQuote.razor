@using SmartMirror.Data.Jokes
@inject JokesQuotesService JokesQuotesService

<div class="container-fluid card-1">
    <div class="row">
        <div class="col-12">
            <p class="box-heading">QUOTES &#128172;</p>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @if (Quotes == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <p>@Quotes[Index]</p>
            }
        </div>
    </div>
</div>
<br />

@code {
    string[] Quotes { get; set; }
    int Index { get; set; }
    private string Time { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Random random = new Random();
        Quotes = await JokesQuotesService.GetQuotesAsync();
        var timer = new Timer((_) =>
        {
            Time = DateTime.UtcNow.ToString();
            InvokeAsync(() =>
            {
                try
                {
                    Index = random.Next(0, Quotes.Length);
                    StateHasChanged();
                }
                catch (ObjectDisposedException)
                {
                }
            });
        }, null, 0, 60000);

        base.OnInitializedAsync();
    }
}
