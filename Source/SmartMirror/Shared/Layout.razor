@using Microsoft.AspNetCore.Components.Authorization

<div class="container-fluid" style="font-size: 0.9rem">
    <br />
    <div class="row">
        @*add 5 for bus on VVS*@
        <CascadingValue Value="this" Name="LayoutRazor">
            <CascadingValue Value="Profile" Name="Profile">
                @if (Profile == "morgens")
                {
                    <Layout_morning></Layout_morning>
                }
                else if (Profile == "mittags")
                {
                    <Layout_mid></Layout_mid>
                }
                else if (Profile == "abends")
                {
                    <Layout_evening></Layout_evening>
                }
                else if (Profile == "spiegel")
                {
                    <Layout_spiegel></Layout_spiegel>
                }
            </CascadingValue>
        </CascadingValue>
    </div>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [CascadingParameter]
    private static string Profile { get; set; } = GetInitialProfile();

    private static Dictionary<Type, object> DI = new Dictionary<Type, object>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        base.OnAfterRenderAsync(firstRender);
    }

    public void SetProfile(string profile)
    {
        Profile = profile;
        InvokeAsync(() => { StateHasChanged(); });
    }

    public void AddToParent<T>(T child)
    {
        if (!DI.ContainsKey(typeof(T)))
        {
            DI.Add(typeof(T), child);
        }
        else
        {
            DI[typeof(T)] = child;
        }
    }

    public T GetFromParent<T>()
    {
        if (DI.ContainsKey(typeof(T)))
        {
            return (T)DI[typeof(T)];
        }

        return default;
    }

    private static string GetInitialProfile()
    {
        var currentHour = DateTime.UtcNow.Hour;
        if (currentHour >= 0 && currentHour < 11)
        {
            return "morgens";
        }
        else if (currentHour >= 11 && currentHour < 17)
        {
            return "mittags";
        }
        else if (currentHour >= 17 && currentHour < 24)
        {
            return "abends";
        }
        else
        {
            return "spiegel";
        }
    }
}