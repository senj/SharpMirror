@using SmartMirror.Data.Calendar;
@inject CalendarService CalendarService

@if(!Show)
{
    return;
}

<div class="container-fluid card-1">
    <div class="row">
        <div class="col-12">
            <p class="box-heading">UPCOMING EVENTS</p>
        </div>
    </div>
    @if (Events == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <table>
                    <thead>
                        <tr>
                            <th style="width:10%"></th>
                            <th style="width:25%"></th>
                            <th style="width:55%"></th>
                        </tr>
                    </thead>
                    @foreach (var calendarEvent in Events)
                    {
                        string days, hours = string.Empty;
                        if (calendarEvent.DtStart.Date != DateTime.Now.Date)
                        {
                            var diff = calendarEvent.DtStart.Date - DateTime.Now.Date;
                            if (diff.Days < 4)
                            {
                                days = $"+{diff.Days}";
                            }
                            else
                            {
                                days = calendarEvent.DtStart.ToString("dd.MM.");
                            }
                        }
                        else
                        {
                            days = string.Empty;
                        }

                        if (!@calendarEvent.IsAllDay)
                        {
                            hours = $"{calendarEvent.DtStart.ToString("HH:mm")} - {calendarEvent.DtEnd.ToString("HH:mm")}";
                        }

                        <tr>
                            <td>
                                @days
                            </td>
                            <td>
                                <span style="font-weight:bold;">@hours</span>
                            </td>
                            <td>
                                @calendarEvent.Summary
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    }
</div>
<br />

@code {
    IEnumerable<Event> Events { get; set; }

    [Parameter]
    public int NumberOfDays { get; set; }

    [Parameter]
    public bool Show { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Events = await CalendarService.GetCalendarAsync(NumberOfDays);
        await base.OnInitializedAsync();
    }
}