@using SmartMirror.Data.Spotify;
@inject IJSRuntime JSRuntime
@inject IWebHostEnvironment environment
@inject SpotifyService SpotifyService

@if (!Show)
{
    return;
}

<div class="container-fluid card-1">
    <div class="row">
        <div class="col-12">
            <p class="box-heading">SPOTIFY</p>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <img id="spotify_image" height="150" width="150" src="/images/spotify/spotify.png" />
        </div>
        <div class="col-4">
            <span id="spotify_track" style="font-weight: bold;"></span>
        </div>
        <div class="col-4">
            <span id="spotify_artist"></span>
        </div>
    </div>
</div>
<br />

@code {
    [Parameter]
    public bool Show { get; set; }

    private EventHandler<NextSongEventArgs> nextSongEventHandler;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        nextSongEventHandler = new EventHandler<NextSongEventArgs>(OnNextSongRequested);
        SpotifyService.NextSongRequested += nextSongEventHandler;

        await base.OnAfterRenderAsync(firstRender);
    }

    public void OnNextSongRequested(object sender, NextSongEventArgs args)
    {
        JSRuntime.InvokeVoidAsync("nextSong");
    }
}
