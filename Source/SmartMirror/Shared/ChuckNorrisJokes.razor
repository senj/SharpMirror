@using SmartMirror.Data.Jokes
@inject JokesQuotesService JokesQuotesService

@if (!Show)
{
    return;
}

<div class="container-fluid card-1">
    <div class="row">
        <div class="col-12">
            <p class="box-heading">JOKES</p>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @if (JokeModel == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <span>@JokeModel.Value</span>
            }
        </div>
    </div>
</div>
<br />

@code {
    [Parameter]
    public bool Show { get; set; }

    ChuckNorrisJokesModel JokeModel { get; set; }
    private string Time { get; set; }

    protected override async Task OnInitializedAsync()
    {
        JokeModel = await JokesQuotesService.GetNextChuckNorrisJokeAsync();
        var timer = new System.Threading.Timer((_) =>
        {
            Time = DateTime.UtcNow.ToString();
            InvokeAsync(async () =>
            {
                try
                {
                    JokeModel = await JokesQuotesService.GetNextChuckNorrisJokeAsync();
                    StateHasChanged();
                }
                catch (ObjectDisposedException)
                {
                }
            });
        }, null, 0, 60000);

        base.OnInitializedAsync();
    }
}
